apply plugin: 'com.android.application'
apply plugin: 'com.jakewharton.hugo'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
// 依赖插件脚本
apply from: 'tinker-support.gradle'
android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion

    defaultConfig {
        applicationId rootProject.ext.android.applicationId
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
//        versionCode gitVersionCode()
        versionName rootProject.ext.android.versionName
        multiDexEnabled true
        multiDexKeepProguard file("multiDexKeep.pro") //分包时，将部分包放入主dex
        ndk {
            //设置支持的SO库架构
            abiFilters 'armeabi' //, 'x86', 'armeabi-v7a', 'x86_64', 'arm64-v8a'
        }
    }
    dataBinding {
        enabled = true
    }
    signingConfigs {
        //开发者签名
        production {
            storeFile file("./jks/newskey.jks")
            storePassword "123456"
            keyAlias "news"
            keyPassword "123456"
        }
    }
    buildTypes {
        debug {
            versionNameSuffix "-debug"
            debuggable true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.production
            buildConfigField("String", "API_URL", rootProject.ext.apiUrl.debugUrl)
            buildConfigField "String", "FACE_API_KEY", rootProject.ext.appKey.faceApiKey
            buildConfigField "String", "FACE_API_SECRET", rootProject.ext.appKey.faceApiSecret
            buildConfigField "String", "BUGGLY_APPID", rootProject.ext.appKey.buglyAppId
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.production
            buildConfigField("String", "API_URL", rootProject.ext.apiUrl.releaseUrl)
            buildConfigField "String", "FACE_API_KEY", rootProject.ext.appKey.faceApiKey
            buildConfigField "String", "FACE_API_SECRET", rootProject.ext.appKey.faceApiSecret
            buildConfigField "String", "BUGGLY_APPID", rootProject.ext.appKey.buglyAppId
            // 进行压缩优化
            zipAlignEnabled true
            // 进行资源优化，移除无用的resource文件  跟快速编译不兼容
//             shrinkResources true

        }

        //修改apk包名
        applicationVariants.all { variant ->
            variant.outputs.all { output ->
                //gradle 3.2.0 上无法修改,
                // if (variant.buildType.name.equals('debug')) {
//                variant.mergedFlavor.versionCode = gitVersionCode()
                //variant.mergedFlavor.versionName = gitVersionTag()
                //   }
                outputFileName = "app-${variant.name}-${defaultConfig.versionName}-${defaultConfig.versionCode}.apk"
            }
        }
    }
    repositories {
        flatDir {
            dirs 'libs'
        }
    }


}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    kapt "com.google.dagger:dagger-compiler:2.16"
    kapt 'com.jakewharton:butterknife-compiler:8.8.1'
    api "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    kapt 'com.github.bumptech.glide:compiler:4.8.0'

//    kapt project(':inject_compile')
    kapt 'com.lz:inject_compile:1.0.6'
    implementation project(':utilslib')

}

//git 获取版本名字版本号
def gitVersionCode() {
    def cmd = 'git rev-list HEAD --first-parent --count'
    cmd.execute().text.trim().toInteger()
}

def gitVersionTag() {
    def cmd = 'git describe --tags'
    def version = cmd.execute().text.trim()

    def pattern = "-(\\d+)-g"
    def matcher = version =~ pattern

    if (matcher) {
        version = version.substring(0, matcher.start()) + "." + matcher[0][1]
    } else {
        version = version + ".0"
    }

    return version
}

apply plugin: 'kotlin-android-extensions'
