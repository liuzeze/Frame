apply plugin: 'com.android.application'
apply plugin: 'com.jakewharton.hugo'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
// 依赖插件脚本
apply from: 'tinker-support.gradle'
android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion

    defaultConfig {
        applicationId rootProject.ext.android.applicationId
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        multiDexEnabled true
        multiDexKeepProguard file("multiDexKeep.pro") //分包时，将部分包放入主dex
        ndk {
            //设置支持的SO库架构
            abiFilters 'armeabi' //, 'x86', 'armeabi-v7a', 'x86_64', 'arm64-v8a'
        }
    }
    dataBinding {
        enabled = true
    }
      signingConfigs {
        //开发者签名
        production {
            storeFile file("./jks/newskey.jks")
            storePassword "123456"
            keyAlias "news"
            keyPassword "123456"
        }
    }
    buildTypes {
        debug {
            versionNameSuffix "-debug"
            debuggable true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.production
            buildConfigField("String", "API_URL", rootProject.ext.apiUrl.debugUrl)
            buildConfigField "String", "API_KEY", '"PPSSlAbaCYZpe8IhLQwWWinS"'
            buildConfigField "String", "API_SECRET", '"noqd2GKQmrpwhLu3hEuUi9X5cGQDfGw6"'
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.production
            buildConfigField("String", "API_URL", rootProject.ext.apiUrl.releaseUrl)
            // 进行压缩优化
            zipAlignEnabled true
            // 进行资源优化，移除无用的resource文件  跟快速编译不兼容
//             shrinkResources true
            buildConfigField "String", "API_KEY", '"PPSSlAbaCYZpe8IhLQwWWinS"'
            buildConfigField "String", "API_SECRET", '"noqd2GKQmrpwhLu3hEuUi9X5cGQDfGw6"'

        }

        //修改apk包名
        applicationVariants.all { variant ->
            // if (variant.buildType.name.equals('debug')) {
            variant.mergedFlavor.versionCode = gitVersionCode()
            //variant.mergedFlavor.versionName = gitVersionTag()
            //   }

            variant.outputs.all { output ->
                outputFileName = "app-${variant.name}-${variant.mergedFlavor.versionName}-${variant.mergedFlavor.versionCode}.apk"
            }
        }
    }
    repositories {
        flatDir {
            dirs 'libs'
        }
    }


}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    kapt "com.google.dagger:dagger-compiler:2.16"
    kapt 'com.jakewharton:butterknife-compiler:8.8.1'
    api "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    kapt 'com.github.bumptech.glide:compiler:4.8.0'

    kapt project(':inject_compile')
    kapt 'com.lz:inject_compilee:1.0.6'
//    implementation project(':utilslib')


    compile "com.android.support:multidex:1.0.3" // 多dex配置
    //注释掉原有bugly的仓库
    //compile 'com.tencent.bugly:crashreport:latest.release'//其中latest.release指代最新版本号，也可以指定明确的版本号，例如1.3.4
    compile 'com.tencent.bugly:crashreport_upgrade:1.3.5'
    // 指定tinker依赖版本（注：应用升级1.3.5版本起，不再内置tinker）
    compile 'com.tencent.tinker:tinker-android-lib:1.9.8'
    compile 'com.tencent.bugly:nativecrashreport:3.3.1' //其中latest.release指代最新版本号，也可以指定明确的版本号，例如2.2.0



}





//git 获取版本名字版本号
def gitVersionCode() {
    def cmd = 'git rev-list HEAD --first-parent --count'
    cmd.execute().text.trim().toInteger()
}

def gitVersionTag() {
    def cmd = 'git describe --tags'
    def version = cmd.execute().text.trim()

    def pattern = "-(\\d+)-g"
    def matcher = version =~ pattern

    if (matcher) {
        version = version.substring(0, matcher.start()) + "." + matcher[0][1]
    } else {
        version = version + ".0"
    }

    return version
}

apply plugin: 'kotlin-android-extensions'
