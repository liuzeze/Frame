apply plugin: 'com.android.library'

android {
    compileSdkVersion 27
    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        abortOnError false
    }
}

dependencies {
    annotationProcessor "com.google.dagger:dagger-compiler:2.15"
    //dagger库以及编译库
    api 'com.google.dagger:dagger:2.15'

    //异步处
    api 'com.squareup.retrofit2:retrofit:2.4.0'
    api 'io.reactivex.rxjava2:rxjava:2.1.16'
    api 'io.reactivex.rxjava2:rxandroid:2.0.2'
    // 网络库
    api 'com.squareup.retrofit2:adapter-rxjava2:2.4.0'
//    api 'com.squareup.okhttp3:logging-interceptor:3.10.0'
    api 'com.squareup.retrofit2:converter-scalars:2.3.0'
    api 'com.squareup.retrofit2:converter-gson:2.4.0'
    api 'com.alibaba:fastjson:1.2.48'
    //    api project(':dependlib')
}

//////// 打包发布配置开始 ////////
//////// 打包发布配置开始 ////////
apply plugin: 'maven'
ext {
    // 从Github上clone下来的项目的本地地址
    GITHUB_REPO_PATH = "D:/A_work/github/zgsy_frame"       //这里指定的就是刚刚新建项目后clone下来的在本地的路径
    PUBLISH_GROUP_ID = 'com.lz'
    PUBLISH_ARTIFACT_ID = 'fram_lib'
    PUBLISH_VERSION = '1.0.0'
}
uploadArchives {
    repositories.mavenDeployer {
        def deployPath = file(project.GITHUB_REPO_PATH)
//        repository(url: "file://D:/android/maven/apache-maven-3.5.3/mavenlib")
        repository(url: "file://${deployPath.absolutePath}")
        pom.project {
            groupId project.PUBLISH_GROUP_ID
            artifactId project.PUBLISH_ARTIFACT_ID
            version project.PUBLISH_VERSION
        }
    }
}

// 源代码一起打包
task androidSourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.sourceFiles
}
artifacts {
    archives androidSourcesJar
}